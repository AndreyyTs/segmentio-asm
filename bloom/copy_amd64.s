// Code generated by command: go run copy_asm.go -pkg bloom -out ../bloom/copy_amd64.s -stubs ../bloom/copy_amd64.go. DO NOT EDIT.

#include "textflag.h"

// func copyAVX2(dst *byte, src *byte, count int)
// Requires: AVX, AVX2
TEXT Â·copyAVX2(SB), NOSPLIT, $0-24
	MOVQ dst+0(FP), AX
	MOVQ src+8(FP), CX
	MOVQ count+16(FP), DX

loop:
	// Loop until zero bytes remain.
	CMPQ DX, $0x00
	JE   done

	// Load operands in registers, apply the OR operation, assign the result.
	VMOVUPS (AX), Y0
	VMOVUPS 32(AX), Y1
	VPOR    (CX), Y0, Y0
	VPOR    32(CX), Y1, Y1
	VMOVUPS Y0, (AX)
	VMOVUPS Y1, 32(AX)

	// Decrement byte count, advance pointers.
	DECQ DX
	ADDQ $0x40, AX
	ADDQ $0x40, CX
	JMP  loop

done:
	RET
