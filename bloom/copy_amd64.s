// Code generated by command: go run copy_asm.go -pkg bloom -out ../bloom/copy_amd64.s -stubs ../bloom/copy_amd64.go. DO NOT EDIT.

#include "textflag.h"

// func copyAVX2(dst *byte, src *byte, n int)
// Requires: AVX, AVX2
TEXT Â·copyAVX2(SB), NOSPLIT, $0-24
	MOVQ dst+0(FP), AX
	MOVQ src+8(FP), CX
	MOVQ n+16(FP), DX
	MOVQ AX, BX
	ADDQ DX, BX

loop:
	// Loop until we reach the end.
	CMPQ AX, BX
	JE   done

	// Load operands in registers, apply the OR operation, assign the result.
	VMOVUPS (AX), Y0
	VMOVUPS 32(AX), Y1
	VPOR    (CX), Y0, Y0
	VPOR    32(CX), Y1, Y1
	VMOVUPS Y0, (AX)
	VMOVUPS Y1, 32(AX)

	// Advance pointers.
	ADDQ $0x40, AX
	ADDQ $0x40, CX
	JMP  loop

done:
	RET
